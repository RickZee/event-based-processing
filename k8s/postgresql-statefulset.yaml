---
apiVersion: v1
kind: Namespace
metadata:
  name: postgresql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  namespace: postgresql
  labels:
    app: postgres
data:
  POSTGRES_DB: real_estate
  POSTGRES_USER: postgresql
  POSTGRES_PASSWORD: 
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: postgresql
  labels:
    app: postgresql
spec:
  ports:
  - port: 5432
    name: postgresql
  clusterIP: None
  selector:
    app: postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql
  namespace: postgresql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: postgresql
  labels:
    app: "postgresql"
spec:
  serviceName: "postgresql"
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:latest
        envFrom:
        - configMapRef:
            name: postgres-secret
        #command: ['postgres', '-c', 'wal_level=logical' ]
        #- docker-entrypoint.sh
        #- 'postgres'
        #- '-c'
        #- 'wal_level=logical'
        #securityContext:
        #  allowPrivilegeEscalation: false
        #  runAsUser: 0
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgresql
